# action.yml
name: install-cosign
description: 'Install Cosign and put it on your path'
branding:
  icon: 'package'
  color: 'blue'
# This is pinned to the last major release, we have to bump it for each action version.
inputs:
  cosign-release:
    description: 'Cosign release version to use in the actions.'
    required: false
    default: 'v0.2.0'
runs:
  using: "composite"
  steps:
    - run: curl -L https://github.com/sigstore/cosign/releases/download/v0.2.0/cosign-linux-amd64 -o cosign
      shell: bash
    # We verify the version against a SHA **in the published action itself**, not in the GCS bucket.
    - run: |
        shaBootstrap=$(shasum -a 256 cosign | cut -d' ' -f1);
        if [[ $shaBootstrap != "677f64870f209b1f41a02247a65697138973e3fb36a0836565cf173b9282aad6" ]]; then exit 1; fi

        semver='^v([0-9]+\.){0,2}(\*|[0-9]+)$'
        if [[ ${{ inputs.cosign-release }} =~ $semver ]]; then
          echo "INFO: Custom Cosign Version ${{ inputs.cosign-release }}"
        else
          echo "ERROR: Unable to validate cosign version: '${{ inputs.cosign-release }}'"
          exit 1
        fi

        # Download custom cosign
        curl -L https://github.com/sigstore/cosign/releases/download/${{ inputs.cosign-release }}/cosign-linux-amd64 -o cosign_${{ inputs.cosign-release }}
        shaCustom=$(shasum -a 256 cosign_${{ inputs.cosign-release }} | cut -d' ' -f1);

        # check if is the same hash means it is the same release
        if [[ $shaCustom != $shaBootstrap ]];
        then
          chmod +x cosign
          curl -LO https://github.com/sigstore/cosign/releases/download/${{ inputs.cosign-release }}/cosign-linux-amd64.sig
          curl -LO https://raw.githubusercontent.com/sigstore/cosign/${{ inputs.cosign-release }}/.github/workflows/cosign.pub
          ./cosign verify-blob --key cosign.pub --signature cosign-linux-amd64.sig cosign_${{ inputs.cosign-release }}
          if [[ $? != 0 ]]; then exit 1; fi
          rm cosign
          mv cosign_${{ inputs.cosign-release }} cosign
        fi
      shell: bash
    - run: chmod +x cosign && mkdir -p $HOME/.cosign && mv cosign $HOME/.cosign/ && echo "$HOME/.cosign" >> $GITHUB_PATH
      shell: bash
